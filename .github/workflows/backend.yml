on:
  push:
    branches: [ main ]

name: AWS ECR push backend

jobs:
  deploy:
    name: Backend Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
        role-duration-seconds: 600
        role-session-name: MySessionName

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build the docker image for testing
      uses: docker/build-push-action@v5
      with:
        context: ./backend/
        file: ./backend/Dockerfile.development
        load: true
        tags: tepache_backend_test:latest
        build-args: |
          RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
          RAILS_DB_HOST=${{ secrets.RAILS_DB_HOST }}
          RAILS_DB_PORT=${{ secrets.RAILS_DB_PORT }}
          RAILS_DB_TEST=${{ secrets.RAILS_DB_TEST_DB }}
          RAILS_DB_USER=${{ secrets.RAILS_DB_TEST_USER }}
          RAILS_DB_TEST_PASSWORD=${{ secrets.RAILS_DB_TEST_PASSWORD }}  

    - name: Prepare database
      id: prepare-db-test
      run: docker run tepache_backend_test:latest rails RAILS_ENV=test db:migrate db:seed

    - name: Run unitest on image
      id: unit-test
      run: docker run tepache_backend_test:latest rspec spec

    - name: Run linting on image
      id: linting
      run: docker run tepache_backend_test:latest rubocop

    - name: Run brakeman on image
      id: brakeman
      run: docker run tepache_backend_test:latest brakeman

    - name: Build image for production
      uses: docker/build-push-action@v5
      with:
        context: ./backend/
        load: true
        tags: ${{steps.login-ecr.outputs.registry}}/${{secrets.BACKEND_REPO_NAME}}:latest
        build-args: |
          RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
          RAILS_DB_HOST=${{ secrets.RAILS_DB_HOST }}
          RAILS_DB_PORT=${{ secrets.RAILS_DB_PORT }}
          RAILS_DB_TEST=${{ secrets.RAILS_DB_TEST_DB }}
          RAILS_DB_USER=${{ secrets.RAILS_DB_TEST_USER }}
          RAILS_DB_TEST_PASSWORD=${{ secrets.RAILS_DB_TEST_PASSWORD }}

    - name: Build, tag, and push the image to Amazon ECR
      id: push-image
      run: |
        echo "Pushing image to ECR..."
        docker push ${{steps.login-ecr.outputs.registry}}/${{secrets.BACKEND_REPO_NAME}}:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
